<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.test</groupId>
  <artifactId>Jacoco-Maven-Example</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Jacoco-Maven-Example</name>
  <url>http://maven.apache.org</url>

  <properties>
  	<java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cobertura.skip>false</cobertura.skip>
    <cobertura.skip>false</cobertura.skip>
    <sonar.host.url>http://localhost:9000/</sonar.host.url>
    <sonar.exclusions></sonar.exclusions>
  </properties>
  
  <dependencies>
  	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
	    <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/cobertura-maven-plugin -->
	<dependency>
   		<groupId>org.codehaus.mojo</groupId>
   		<artifactId>cobertura-maven-plugin</artifactId>
   		<version>2.7</version>
  			<scope>test</scope>
	</dependency>
	<dependency>
 			<groupId>org.apache.tomcat.maven</groupId>
 			<artifactId>tomcat7-maven-plugin</artifactId>
 			<version>2.2</version>
 			<type>maven-plugin</type>
	</dependency>
  </dependencies>
	  
 	<build> 
	 	<plugins>
	 		<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		  	<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.7.7.201606060606</version>
			    <configuration>
			    	<output>file</output>
			        <append>true</append>
	      		</configuration>
			    <executions>
			      	<execution>
			      		<id>jacoco-initialize</id>
			           	<goals>
			               	<goal>prepare-agent</goal>
			           	</goals>
			       	</execution>
			     	<execution>
			           	<id>jacoco-site</id>
			           	<phase>test</phase>
			           	<goals>
			              	<goal>report</goal>
			          	</goals>
			       	</execution>
			    </executions>
			</plugin>	
	       <plugin>
	           <groupId>org.codehaus.mojo</groupId>
	           <artifactId>cobertura-maven-plugin</artifactId>
	           <version>2.7</version>
	           <executions>
	               <execution>
	                   <id>cobertura</id>
	                   <phase>test</phase>
	                   <goals>
	                       <goal>cobertura</goal>
	                   </goals>
	                   <configuration>
	                       <formats>
	                           <format>xml</format>
	                           <format>html</format>
	                       </formats>
	                   </configuration>
	               </execution>
	           </executions>
	        </plugin>
		<!-- Tomcat plugin 
		<plugin>  
			 <groupId>org.apache.tomcat.maven</groupId>  
			 <artifactId>tomcat8-maven-plugin</artifactId>  
			 <version>2.2</version>  
			 <configuration>  
				<url>http://localhost:9090/manager.text</url>  
			  	<server>TomcatServer</server>
			  	<username>admin</username>  
			  	<password>password</password>   
			 </configuration>   
		</plugin>-->      
			<plugin>
	        	<groupId>org.sonarsource.scanner.maven</groupId>
	        	<artifactId>sonar-maven-plugin</artifactId>
	        	<version>3.4.0.905</version>
	        </plugin>
	       	<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<configuration>
					<imageName>sonarqubebaseimage</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
	    </plugins>
	</build>
</project>
